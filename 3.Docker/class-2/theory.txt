FROM node:20-alpine as build-stage

WORKDIR /react

# If the package doesn't change, no need to copy it every time we run the build command
COPY package*.json .

RUN npm install

COPY . .

RUN npm run build

FROM nginx:stable-alpine as production-stage

COPY --from=build-stage /react/dist /usr/share/nginx/html

# the container is running at port 3000. It helps DevOps just seeing the docker file
# EXPOSE 3000

#start nginx and serve the application
CMD ["nginx","-g","daemon off;"]

See the image becomes 1/3 or less than the previous size.



--------------

docker run --name svc1 nginx

----------------

#create two container and ping from another

docker run --name svc1 --hostname service1 nginx
docker run --name svc2 --hostname service2 nginx

#enter into servce1

docker exec -it svc1 bash 

#in another terminal 
docker inspect svc2 | grep -i ip

#again in the 1st terminal
sudo apt update

apt install curl vim

ls

curl 172.17.0.3:80

-- 

#to check further
docker exec -it svc2 bash 

cd /usr/share/nginx/html/

ls

apt update

apt install vim -y

vim index.html
->make some changes in index file

#form servce1

curl 172.17.0.3:80








